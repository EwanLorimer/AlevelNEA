from ast import Pass
from msilib.schema import tables
import sqlite3

con = sqlite3.connect('users.db') #Establishes connection to the Database

cur = con.cursor() #Cursor tells database what to do


#"rowid acts as primary key for all rows"
class generalDbFunctions:
    #Create User Table
    def createUsersTable():
        cur.execute("""CREATE TABLE users (
            
            username text,
            password text
        )
        """)
    #Create Folder Table
    def createFoldersTable():
        cur.execute("""CREATE TABLE folders (
            
            folderName text,
            folderOwner text,
            FOREIGN KEY(folderOwner) REFERENCES users(username)
        )
            
        """)
    #Create Articles Table    
    def createArticlesTable():
        cur.execute("""CREATE TABLE articles(
            
            articleTitle text,
            articleKeyWords text,
            articleNotes text,
            articleSummary text,
            articleFolderIn int,
            FOREIGN KEY(articleFolderIn) REFERENCES folders(folderName)
        )
        """) 

    def returnContentsofTable(table):
        #Returns the contents of the table
        #This will allow me to test each table, one universal function rather than
        #a function for each table -> less written code therefore easier to read
        cur.execute("SELECT * FROM {}".format(table))
        print(cur.fetchall())


class usersTableFunctions:
            
    def usernameAvailable(Username):
        #Check if the username already exists, keeps usernames unique
        #Return any records in the user table with that username
        #Increment counter for every record found
        #If counter more than zero then username taken return false
        #If counter equals zero, username available, return true
        counter = 0
        cur.execute("SELECT username FROM users WHERE username = '{}'".format(Username))
        #cur.execute("SELECT length('username') FROM users WHERE username ='{}'".format(Username))
        

    def createUser(username, password):
        #username and password will be added into the  
        cur.execute("INSERT INTO users VALUES (?,?)",(username, password))


usersTableFunctions.usernameAvailable("test")


def refreshTables():
    #Drops, creates and outputs tables
    cur.execute("DROP TABLE users")
    cur.execute("DROP TABLE folders")
    cur.execute("DROP TABLE articles")
    generalDbFunctions.createArticlesTable()
    generalDbFunctions.createFoldersTable()
    generalDbFunctions.createUsersTable()
    generalDbFunctions.returnContentsofTable("users")
    generalDbFunctions.returnContentsofTable("folders")
    generalDbFunctions.returnContentsofTable("articles")    




class articlesTableFunctions:
    pass



#Commit changes the DB
con.commit()
#Close connection to DB
cur.close()