import time
from click import password_option
from scriptingFunctions import funcs
from flask import Flask, render_template, redirect, request, session, url_for, sessions

from databaseFunctions import Users, UsersFunctions


app = Flask(__name__) #Instantiates Flask as "app"



@app.route('/') #Loads 
def homePage():
    return render_template('menuPage.html')


@app.route('/login', methods=["POST", "GET"])#Two methods: POST and GET, POST for secure data, GET for loading pages
def loginPage():
    if request.method == "POST":    #If request method is POST, user has entered details.
        username = request.form["username"] #Take the data from the request form and store it as "username" and "password"
        password = request.form["password"]
        textmsg = username + "  " + password
        return textmsg
 
    else:
        return render_template('loginPage.html')


@app.route("/wrongDetails")
def wrongDetailsPage():
    return render_template('signUpError.html')


@app.route('/signup', methods=["POST", "GET"])
def signUpPage():
    if request.method == "POST":
        username = request.form["username"]
        password = request.form["password"]
        passwordConfirm = request.form["confirmPassword"]
        
        check = funcs.checkSignUpParameters(username, password, passwordConfirm)
        if check == True:          
            
            unique = UsersFunctions.checkUsernameExists(username)
            if unique == True:
                return 1
    else:
        return render_template('signUpPage.html')



@app.route('/mainapp')
def mainPage():
    return render_template('mainPage.html')

@app.route("/logout")
def logout():
    '''There will need to be a "Logout" button at the top
       of the screen to enable the user to logout'''
    session.pop("username", None)
    session.pop("password", None)
    #Remove username and password from session when user logs out  
    return render_template('logOutPage.html')
 
if __name__ == "__main__":
    #db.create_all()#Creates database if it doesn't already exist
    app.run()